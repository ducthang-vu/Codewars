BASIC VERSION:

def done_or_not(board):
    for row in board:  # rows
        if set(row) == set([i for i in range(1, 10)]):
            continue
        else:
            return 'Try again!'
    for y in range(0, 9):  # columns
        column = []
        for row in board:
            column.append(row[y])
        if set(column) == set([i for i in range(1, 10)]):
            continue
        else:
            print(y)
            return 'Try again!'
    for z in range(2):
        for a in range(2):
            array = []
            for row in board[3 * z: 3 * z + 3]:
                for y in range(3 * a, 3 + 3 * a):
                    array.append(row[y])
            if set(array) == set([i for i in range(1, 10)]):
                continue
            else:
                return 'Try again!'
    return 'Finished!'


SECOND VERSION (LIST CREATED BY COMPREHENSION):

def done_or_not(board):
    for row in board:  # rows
        if set(row) == set([i for i in range(1, 10)]):
            continue
        else:
            return 'Try again!'
    for y in range(0, 9):  # columns
        column = [row[y] for row in board]
        if set(column) == set([i for i in range(1, 10)]):
            continue
        else:
            print(y)
            return 'Try again!'
    for z in range(2):
        for a in range(2):
            array = [row[y] for y in range(3 * a, 3 + 3 * a) for row in board[3 * z: 3 * z + 3]]
            if set(array) == set([i for i in range(1, 10)]):
                continue
            else:
                return 'Try again!'
    return 'Finished!'


THIRD: shorter but bad practice:

def done_or_not(board):
    for row in board:
        if set(row) == set([i for i in range(1, 10)]):
            continue
        else:
            return 'Try again!'
    for y in range(0, 9):
        if set([row[y] for row in board]) == set([i for i in range(1, 10)]):
            continue
        else:
            print(y)
            return 'Try again!'
    for z in range(2):
        for a in range(2):
            if set([row[y] for y in range(3 * a, 3 + 3 * a) for row in board[3 * z: 3 * z + 3]]) == set([i for i in range(1, 10)]):
                continue
            else:
                return 'Try again!'
    return 'Finished!'

COMPACTED:
def done_or_not(board):
    array = [set(row) for row in board] + [set([row[y] for row in board]) for y in range(0, 9)] +\
            [set([row[y] for y in range(3 * a, 3 + 3 * a) for row in board[3 * z: 3 * z + 3]])
             for a in range(2) for z in range(2)]
    return 'Finished!'if all(combo == set([i for i in range(1, 10)]) for combo in array) else 'Try again!'